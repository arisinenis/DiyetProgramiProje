<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSend.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>